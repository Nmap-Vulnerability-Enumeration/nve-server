import json
from device import DeviceEncoder

class Vulnerability:
    def __init__(self,
                 cve: str,
                 affected_service: str = None,  # name of the affected service
                 affected_devices: dict = None, # {key:value} = {ip:list-of-affected-ports}
                 severity: float = None,        # number between 0 and 10
                 patched: bool = None,          # patch status
                 ):
        self.cve = cve
        self.affected_service = affected_service
        self.affected_devices = dict() if affected_devices == None else affected_devices
        self.severity = severity
        self.patched = patched

class VulnerabilityEncoder(json.JSONEncoder):
    def default(self, o):
        if isinstance(o, Vulnerability):
            return {
                "_type": "vuln",
                "value": {
                    "cve": o.cve,
                    "affected_service": o.affected_service,
                    "affected_devices": o.affected_devices,
                    "severity": o.severity,
                    "patched": o.patched
                }
            }

        else:
            return super().default(o)